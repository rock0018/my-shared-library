services:
  laravel-web:
    build:
      context: .
      dockerfile: ./docker/production/nginx/Dockerfile
      args:
        - APP_VERSION=${APP_VERSION:-1.0.0}
    image:  crpi-abrasomrm9oq6os4.cn-shanghai.personal.cr.aliyuncs.com/singlab/laravel-web:1.0.0
    restart: unless-stopped # Automatically restart unless the service is explicitly stopped
    volumes:
      - laravel-storage-production:/var/www/storage:ro
    networks:
      - laravel-production
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      php-fpm:
        condition: service_healthy  # Wait for php-fpm health check

  laravel-fpm:
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      args:
        - APP_VERSION=${APP_VERSION:-1.0.0}
      target: production
    image:  crpi-abrasomrm9oq6os4.cn-shanghai.personal.cr.aliyuncs.com/singlab/laravel-fpm:1.0.0
    restart: unless-stopped
    volumes:
      - laravel-storage-production:/var/www/storage  # Mount the storage volume
    env_file:
      - .env
    networks:
      - laravel-production
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: crpi-abrasomrm9oq6os4.cn-shanghai.personal.cr.aliyuncs.com/singlab/postgres:17
    restart: unless-stopped
    user: postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE:-app}
      - POSTGRES_USER=${POSTGRES_USERNAME:-laravel}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
    volumes:
      - postgres-data-production:/var/lib/postgresql/data
    networks:
      - laravel-production
    # Health check for PostgreSQL
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: crpi-abrasomrm9oq6os4.cn-shanghai.personal.cr.aliyuncs.com/singlab/redis:alpine
    restart: unless-stopped  # Automatically restart unless the service is explicitly stopped
    networks:
      - laravel-production
    # Health check for Redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  laravel-production:

volumes:
  postgres-data-production:
  laravel-storage-production:
